package ui;

import java.text.Normalizer;
import java.util.ArrayList;
import java.util.List;
import java.util.Set;
import java.util.TreeSet;

/**
 *
 * @author Francisco Javier Araujo Mendoza
 */
public class VentanaPartida extends javax.swing.JFrame {

    PanelAhorcado pAhorcado;
    int fallos = 0;
    String palabra, palabraNorm;
    StringBuilder progreso;
    Set<Character> letrasPalabra, letrasIntentadas;
    MenuPrincipal padre;
    /**
     * Creates new form VentanaJuego
     */
    public VentanaPartida(String palabra, MenuPrincipal padre, String nombreJugador) {
        initComponents();
        this.padre = padre;
        this.palabra = palabra.toUpperCase();
        letrasPalabra = new TreeSet<>();
        letrasIntentadas = new TreeSet<>();
        
        //Genera un set con las letrasPalabra a adivinar, normalizando (elimina los acentos, á se vuelve a, y ñ se vuelve n)
        palabraNorm = Normalizer.normalize(this.palabra, Normalizer.Form.NFD).replaceAll("\\p{M}", "");
        
        
        char[] palabraChars = palabraNorm.toCharArray();
        String progresoIni = "";
        for (int i = 0; i < palabraChars.length; i++) {
            letrasPalabra.add(palabraChars[i]);
            progresoIni += "_";
        }
        progreso = new StringBuilder(progresoIni);
        pAhorcado = new PanelAhorcado(fallos, panelEstado);
        panelEstado.add(pAhorcado);
        this.setLocationRelativeTo(padre);
        this.setTitle("Ahorcado - " + nombreJugador);
        mostrarProgreso();
    }
    
    private void mostrarProgreso() {
        String label = "";
        //Mostrar progreso con espacio entre letras
        for (int i = 0; i < progreso.length(); i++) {
            label += progreso.charAt(i);
            label += " ";
        }
        this.labelProgreso.setText(label);
        
        label = "";
        //Mostrar letras intentadas
        for (Character c : letrasIntentadas) {
            label += c;
            label += " ";
        }
        this.labelLetrasIntentos.setText(label);
        pAhorcado.setFallos(fallos);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelEstado = new javax.swing.JPanel();
        labelIntentos = new javax.swing.JLabel();
        labelLetrasIntentos = new javax.swing.JLabel();
        labelProgreso = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                formKeyTyped(evt);
            }
        });

        panelEstado.setLayout(null);

        labelIntentos.setText("Intentadas:");

        labelProgreso.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        labelProgreso.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(labelIntentos)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(labelLetrasIntentos, javax.swing.GroupLayout.DEFAULT_SIZE, 318, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(69, 69, 69)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(panelEstado, javax.swing.GroupLayout.DEFAULT_SIZE, 256, Short.MAX_VALUE)
                            .addComponent(labelProgreso, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(labelProgreso, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(labelIntentos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(labelLetrasIntentos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyTyped
        
        String entradaStr = ""+Character.toUpperCase(evt.getKeyChar());
        entradaStr = Normalizer.normalize(entradaStr, Normalizer.Form.NFD).replaceAll("\\p{M}", "");      
        char entrada = entradaStr.charAt(0);
        
        //Si se ha introducido una letra
        if (entrada >= 'A' && entrada <= 'Z') {
            //Y no se ha intentado todavía
            if (letrasIntentadas.add(entrada)) {
                //Comprobar si es una letra válida
                if (letrasPalabra.contains(entrada)) {
                    //Si lo es, añadir
                    letrasPalabra.remove(entrada);
                    
                    //Calcular todas las ocurrencias de la letra
                    List<Integer> ocurrencias = new ArrayList<>(palabraNorm.length());
                    int indice = palabraNorm.indexOf(entrada);
                    while (indice >= 0) {
                        ocurrencias.add(indice);
                        indice = palabraNorm.indexOf(entrada, indice+1);
                    }
                    for (Integer n : ocurrencias) {
                        progreso.setCharAt(n, palabra.charAt(n));
                    }
                } else { //Si la letra no está en la palabra
                    fallos++;
                }
            }  
        }
        
        mostrarProgreso();
        if (progreso.indexOf("_") == -1) {  //Si se ha completado
               padre.partidaFin(true);
        }
        if (fallos >= 8) {
            padre.partidaFin(false);
        }
    }//GEN-LAST:event_formKeyTyped


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel labelIntentos;
    private javax.swing.JLabel labelLetrasIntentos;
    private javax.swing.JLabel labelProgreso;
    private javax.swing.JPanel panelEstado;
    // End of variables declaration//GEN-END:variables
}
